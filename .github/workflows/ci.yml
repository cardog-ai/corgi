name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Type check
        run: npx tsc --noEmit

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    name: End-to-End Package Test
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build and prepare package
        run: |
          npm run build
          npm run prepare-db

      - name: Pack package
        run: npm pack

      - name: Create test directory
        run: |
          mkdir -p /tmp/corgi-e2e-test
          cd /tmp/corgi-e2e-test
          npm init -y

      - name: Install packed package
        run: |
          cd /tmp/corgi-e2e-test
          npm install $GITHUB_WORKSPACE/cardog-corgi-*.tgz

      - name: Test CLI functionality
        run: |
          cd /tmp/corgi-e2e-test
          # Test CLI with verbose output to ensure database path resolution works
          npx corgi decode -v 1HGCM82633A123456

      - name: Test programmatic API
        run: |
          cd /tmp/corgi-e2e-test
          cat > test.js << 'EOF'
          const { createDecoder } = require('@cardog/corgi');

          async function test() {
            console.log('Testing programmatic API...');
            
            try {
              const decoder = await createDecoder({ forceFresh: true });
              console.log('✅ Decoder created successfully');
              
              const result = await decoder.decode('1HGCM82633A123456');
              console.log('✅ VIN decoded successfully:', result.vin);
              console.log('Valid:', result.valid);
              
              if (result.components.vehicle) {
                console.log('Make:', result.components.vehicle.make);
                console.log('Year:', result.components.vehicle.year);
              }
              
              await decoder.close();
              console.log('✅ E2E test passed!');
            } catch (error) {
              console.error('❌ E2E test failed:', error.message);
              process.exit(1);
            }
          }

          test();
          EOF

          node test.js

      - name: Cleanup
        run: rm -rf /tmp/corgi-e2e-test
